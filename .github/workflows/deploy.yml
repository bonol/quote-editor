name: Deploy to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-1
  ELASTIC_BEANSTALK_APPLICATION_NAME: quote-editor
  ELASTIC_BEANSTALK_ENVIRONMENT_NAME: Quote-editor-env
  ELASTIC_BEANSTALK_PLATFORM: Ruby 3.4
  ELASTIC_BEANSTALK_PLATFORM_BRANCH: ruby-3.4
  ELASTIC_BEANSTALK_PLATFORM_VERSION: 4.5.2

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::796438783921:role/GithubActions-QuoteEditor-DeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install and build assets
        run: |
          corepack enable
          npm install
          npm run build:all

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Generate deployment package
        run: |
          zip -r deploy.zip . -x "*.git*" "*.github*" "tmp/*" "log/*" "test/*" "spec/*" "node_modules/*"

      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://elasticbeanstalk-${{ env.AWS_REGION }}-${{ github.actor }}-${{ github.repository_owner }}-${{ github.repository_name }}/deploy.zip

      - name: Create application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ env.ELASTIC_BEANSTALK_APPLICATION_NAME }} \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket="elasticbeanstalk-${{ env.AWS_REGION }}-${{ github.actor }}-${{ github.repository_owner }}-${{ github.repository_name }}",S3Key="deploy.zip" \
            --region ${{ env.AWS_REGION }}

      - name: Deploy to environment
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ env.ELASTIC_BEANSTALK_ENVIRONMENT_NAME }} \
            --version-label ${{ github.sha }} \
            --region ${{ env.AWS_REGION }}

      - name: Wait for deployment
        run: |
          aws elasticbeanstalk wait environment-updated \
            --environment-names ${{ env.ELASTIC_BEANSTALK_ENVIRONMENT_NAME }} \
            --region ${{ env.AWS_REGION }}